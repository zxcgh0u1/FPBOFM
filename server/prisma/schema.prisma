
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  EPIC
  LEGENDARY
}

model User {
  id             String             @id @default(cuid())
  email          String             @unique
  username       String
  passwordHash   String
  wallet         Wallet?
  creatures      CreatureInstance[]
  tasks          UserTask[]
  battlesAsA     Battle[]           @relation("BattleA")
  battlesAsB     Battle[]           @relation("BattleB")
  dailyClaimedAt DateTime?
}

model Wallet {
  id      String @id @default(cuid())
  userId  String @unique
  user    User   @relation(fields: [userId], references: [id])
  balance Int
}

model CreatureSpec {
  id        String   @id @default(cuid())
  name      String
  rarity    Rarity
  dropRate  Int
  baseHP    Int
  baseATK   Int
  baseDEF   Int
  instances CreatureInstance[]
}

model CreatureInstance {
  id      String   @id @default(cuid())
  ownerId String
  specId  String
  owner   User          @relation(fields: [ownerId], references: [id])
  spec    CreatureSpec  @relation(fields: [specId], references: [id])
  stars   Int           @default(1)
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String
  reward      Int
  userTasks   UserTask[]
}

model UserTask {
  id     String @id @default(cuid())
  userId String
  taskId String
  user   User   @relation(fields: [userId], references: [id])
  task   Task   @relation(fields: [taskId], references: [id])
  done   Boolean @default(false)
}

model Battle {
  id        String   @id @default(cuid())
  aId       String
  bId       String
  a         User     @relation("BattleA", fields: [aId], references: [id])
  b         User     @relation("BattleB", fields: [bId], references: [id])
  winnerId  String?
  createdAt DateTime @default(now())
}

model Gallery {
  id       String   @id @default(cuid())
  name     String
  rarity   Rarity
  imageUrl String?
  baseHP   Int
  baseATK  Int
  baseDEF  Int
}
